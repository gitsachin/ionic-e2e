{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-route_4_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-06cd27b1.js';\nimport { c as componentOnReady, o as debounce } from './helpers-6ff04165.js';\nimport { b as getIonMode } from './ionic-global-a049bcbf.js';\nimport { o as openURL, c as createColorClasses } from './theme-a24ff1ad.js';\n\nlet Route = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\n    /**\n     * Relative path that needs to match in order for this route to apply.\n     *\n     * Accepts paths similar to expressjs so that you can define parameters\n     * in the url /foo/:bar where bar would be available in incoming props.\n     */\n    this.url = '';\n  }\n  onUpdate(newValue) {\n    this.ionRouteDataChanged.emit(newValue);\n  }\n  onComponentProps(newValue, oldValue) {\n    if (newValue === oldValue) {\n      return;\n    }\n    const keys1 = newValue ? Object.keys(newValue) : [];\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\n    if (keys1.length !== keys2.length) {\n      this.onUpdate(newValue);\n      return;\n    }\n    for (const key of keys1) {\n      if (newValue[key] !== oldValue[key]) {\n        this.onUpdate(newValue);\n        return;\n      }\n    }\n  }\n  connectedCallback() {\n    this.ionRouteDataChanged.emit();\n  }\n  static get watchers() { return {\n    \"url\": [\"onUpdate\"],\n    \"component\": [\"onUpdate\"],\n    \"componentProps\": [\"onComponentProps\"]\n  }; }\n};\n\nlet RouteRedirect = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\n  }\n  propDidChange() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  connectedCallback() {\n    this.ionRouteRedirectChanged.emit();\n  }\n  static get watchers() { return {\n    \"from\": [\"propDidChange\"],\n    \"to\": [\"propDidChange\"]\n  }; }\n};\n\nconst ROUTER_INTENT_NONE = 'root';\nconst ROUTER_INTENT_FORWARD = 'forward';\nconst ROUTER_INTENT_BACK = 'back';\n\n// Join the non empty segments with \"/\".\nconst generatePath = (segments) => {\n  const path = segments\n    .filter(s => s.length > 0)\n    .join('/');\n  return '/' + path;\n};\nconst generateUrl = (segments, useHash, queryString) => {\n  let url = generatePath(segments);\n  if (useHash) {\n    url = '#' + url;\n  }\n  if (queryString !== undefined) {\n    url += '?' + queryString;\n  }\n  return url;\n};\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\n  const url = generateUrl([...parsePath(root).segments, ...path], useHash, queryString);\n  if (direction === ROUTER_INTENT_FORWARD) {\n    history.pushState(state, '', url);\n  }\n  else {\n    history.replaceState(state, '', url);\n  }\n};\nconst chainToPath = (chain) => {\n  const path = [];\n  for (const route of chain) {\n    for (const segment of route.path) {\n      if (segment[0] === ':') {\n        const param = route.params && route.params[segment.slice(1)];\n        if (!param) {\n          return null;\n        }\n        path.push(param);\n      }\n      else if (segment !== '') {\n        path.push(segment);\n      }\n    }\n  }\n  return path;\n};\n// Remove the prefix segments from the path segments.\n//\n// Return:\n// - null when the path segments do not start with the passed prefix,\n// - the path segments after the prefix otherwise.\nconst removePrefix = (prefix, path) => {\n  if (prefix.length > path.length) {\n    return null;\n  }\n  if (prefix.length <= 1 && prefix[0] === '') {\n    return path;\n  }\n  for (let i = 0; i < prefix.length; i++) {\n    if (prefix[i] !== path[i]) {\n      return null;\n    }\n  }\n  if (path.length === prefix.length) {\n    return [''];\n  }\n  return path.slice(prefix.length);\n};\nconst readPath = (loc, root, useHash) => {\n  const prefix = parsePath(root).segments;\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\n  const path = parsePath(pathname).segments;\n  return removePrefix(prefix, path);\n};\n// Parses the path to:\n// - segments an array of '/' separated parts,\n// - queryString (undefined when no query string).\nconst parsePath = (path) => {\n  let segments = [''];\n  let queryString;\n  if (path != null) {\n    const qsStart = path.indexOf('?');\n    if (qsStart > -1) {\n      queryString = path.substr(qsStart + 1);\n      path = path.substr(0, qsStart);\n    }\n    segments = path.split('/')\n      .map(s => s.trim())\n      .filter(s => s.length > 0);\n    if (segments.length === 0) {\n      segments = [''];\n    }\n  }\n  return { segments, queryString };\n};\n\nconst printRoutes = (routes) => {\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\n  for (const chain of routes) {\n    const path = [];\n    chain.forEach(r => path.push(...r.path));\n    const ids = chain.map(r => r.id);\n    console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\n  }\n  console.groupEnd();\n};\nconst printRedirects = (redirects) => {\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\n  for (const redirect of redirects) {\n    if (redirect.to) {\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\n    }\n  }\n  console.groupEnd();\n};\n\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\n  try {\n    // find next navigation outlet in the DOM\n    const outlet = searchNavNode(root);\n    // make sure we can continue interacting the DOM, otherwise abort\n    if (index >= chain.length || !outlet) {\n      return changed;\n    }\n    await new Promise(resolve => componentOnReady(outlet, resolve));\n    const route = chain[index];\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\n    // if the outlet changed the page, reset navigation to neutral (no direction)\n    // this means nested outlets will not animate\n    if (result.changed) {\n      direction = ROUTER_INTENT_NONE;\n      changed = true;\n    }\n    // recursively set nested outlets\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\n    // once all nested outlets are visible let's make the parent visible too,\n    // using markVisible prevents flickering\n    if (result.markVisible) {\n      await result.markVisible();\n    }\n    return changed;\n  }\n  catch (e) {\n    console.error(e);\n    return false;\n  }\n};\nconst readNavState = async (root) => {\n  const ids = [];\n  let outlet;\n  let node = root;\n  // tslint:disable-next-line:no-constant-condition\n  while (true) {\n    outlet = searchNavNode(node);\n    if (outlet) {\n      const id = await outlet.getRouteId();\n      if (id) {\n        node = id.element;\n        id.element = undefined;\n        ids.push(id);\n      }\n      else {\n        break;\n      }\n    }\n    else {\n      break;\n    }\n  }\n  return { ids, outlet };\n};\nconst waitUntilNavNode = () => {\n  if (searchNavNode(document.body)) {\n    return Promise.resolve();\n  }\n  return new Promise(resolve => {\n    window.addEventListener('ionNavWillLoad', resolve, { once: true });\n  });\n};\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\nconst searchNavNode = (root) => {\n  if (!root) {\n    return undefined;\n  }\n  if (root.matches(QUERY)) {\n    return root;\n  }\n  const outlet = root.querySelector(QUERY);\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\n};\n\n// Returns whether the given redirect matches the given path segments.\n//\n// A redirect matches when the segments of the path and redirect.from are equal.\n// Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\n// The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\nconst matchesRedirect = (path, redirect) => {\n  const { from, to } = redirect;\n  if (to === undefined) {\n    return false;\n  }\n  if (from.length > path.length) {\n    return false;\n  }\n  for (let i = 0; i < from.length; i++) {\n    const expected = from[i];\n    if (expected === '*') {\n      return true;\n    }\n    if (expected !== path[i]) {\n      return false;\n    }\n  }\n  return from.length === path.length;\n};\n// Returns the first redirect matching the path segments or undefined when no match found.\nconst findRouteRedirect = (path, redirects) => {\n  return redirects.find(redirect => matchesRedirect(path, redirect));\n};\nconst matchesIDs = (ids, chain) => {\n  const len = Math.min(ids.length, chain.length);\n  let i = 0;\n  for (; i < len; i++) {\n    if (ids[i].toLowerCase() !== chain[i].id) {\n      break;\n    }\n  }\n  return i;\n};\nconst matchesPath = (inputPath, chain) => {\n  const segments = new RouterSegments(inputPath);\n  let matchesDefault = false;\n  let allparams;\n  for (let i = 0; i < chain.length; i++) {\n    const path = chain[i].path;\n    if (path[0] === '') {\n      matchesDefault = true;\n    }\n    else {\n      for (const segment of path) {\n        const data = segments.next();\n        // data param\n        if (segment[0] === ':') {\n          if (data === '') {\n            return null;\n          }\n          allparams = allparams || [];\n          const params = allparams[i] || (allparams[i] = {});\n          params[segment.slice(1)] = data;\n        }\n        else if (data !== segment) {\n          return null;\n        }\n      }\n      matchesDefault = false;\n    }\n  }\n  const matches = (matchesDefault)\n    ? matchesDefault === (segments.next() === '')\n    : true;\n  if (!matches) {\n    return null;\n  }\n  if (allparams) {\n    return chain.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, allparams[i]),\n      beforeEnter: route.beforeEnter,\n      beforeLeave: route.beforeLeave\n    }));\n  }\n  return chain;\n};\n// Merges the route parameter objects.\n// Returns undefined when both parameters are undefined.\nconst mergeParams = (a, b) => {\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\n};\nconst routerIDsToChain = (ids, chains) => {\n  let match = null;\n  let maxMatches = 0;\n  const plainIDs = ids.map(i => i.id);\n  for (const chain of chains) {\n    const score = matchesIDs(plainIDs, chain);\n    if (score > maxMatches) {\n      match = chain;\n      maxMatches = score;\n    }\n  }\n  if (match) {\n    return match.map((route, i) => ({\n      id: route.id,\n      path: route.path,\n      params: mergeParams(route.params, ids[i] && ids[i].params)\n    }));\n  }\n  return null;\n};\nconst routerPathToChain = (path, chains) => {\n  let match = null;\n  let matches = 0;\n  for (const chain of chains) {\n    const matchedChain = matchesPath(path, chain);\n    if (matchedChain !== null) {\n      const score = computePriority(matchedChain);\n      if (score > matches) {\n        matches = score;\n        match = matchedChain;\n      }\n    }\n  }\n  return match;\n};\nconst computePriority = (chain) => {\n  let score = 1;\n  let level = 1;\n  for (const route of chain) {\n    for (const path of route.path) {\n      if (path[0] === ':') {\n        score += Math.pow(1, level);\n      }\n      else if (path !== '') {\n        score += Math.pow(2, level);\n      }\n      level++;\n    }\n  }\n  return score;\n};\nclass RouterSegments {\n  constructor(path) {\n    this.path = path.slice();\n  }\n  next() {\n    if (this.path.length > 0) {\n      return this.path.shift();\n    }\n    return '';\n  }\n}\n\nconst readProp = (el, prop) => {\n  if (prop in el) {\n    return el[prop];\n  }\n  if (el.hasAttribute(prop)) {\n    return el.getAttribute(prop);\n  }\n  return null;\n};\nconst readRedirects = (root) => {\n  return Array.from(root.children)\n    .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\n    .map(el => {\n    const to = readProp(el, 'to');\n    return {\n      from: parsePath(readProp(el, 'from')).segments,\n      to: to == null ? undefined : parsePath(to),\n    };\n  });\n};\nconst readRoutes = (root) => {\n  return flattenRouterTree(readRouteNodes(root));\n};\nconst readRouteNodes = (node) => {\n  return Array.from(node.children)\n    .filter(el => el.tagName === 'ION-ROUTE' && el.component)\n    .map(el => {\n    const component = readProp(el, 'component');\n    return {\n      path: parsePath(readProp(el, 'url')).segments,\n      id: component.toLowerCase(),\n      params: el.componentProps,\n      beforeLeave: el.beforeLeave,\n      beforeEnter: el.beforeEnter,\n      children: readRouteNodes(el)\n    };\n  });\n};\nconst flattenRouterTree = (nodes) => {\n  const chains = [];\n  for (const node of nodes) {\n    flattenNode([], chains, node);\n  }\n  return chains;\n};\nconst flattenNode = (chain, chains, node) => {\n  chain = chain.slice();\n  chain.push({\n    id: node.id,\n    path: node.path,\n    params: node.params,\n    beforeLeave: node.beforeLeave,\n    beforeEnter: node.beforeEnter\n  });\n  if (node.children.length === 0) {\n    chains.push(chain);\n    return;\n  }\n  for (const child of node.children) {\n    flattenNode(chain, chains, child);\n  }\n};\n\nlet Router = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\n    this.previousPath = null;\n    this.busy = false;\n    this.state = 0;\n    this.lastState = 0;\n    /**\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\n     * an alternate prefix for all URL paths.\n     */\n    this.root = '/';\n    /**\n     * The router can work in two \"modes\":\n     * - With hash: `/index.html#/path/to/page`\n     * - Without hash: `/path/to/page`\n     *\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\n     *\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\n     * requires additional server-side configuration in order to properly work.\n     *\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\n     *\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\n     */\n    this.useHash = true;\n  }\n  async componentWillLoad() {\n    await waitUntilNavNode();\n    const canProceed = await this.runGuards(this.getPath());\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        const { redirect } = canProceed;\n        const path = parsePath(redirect);\n        this.setPath(path.segments, ROUTER_INTENT_NONE, path.queryString);\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\n      }\n    }\n    else {\n      await this.onRoutesChanged();\n    }\n  }\n  componentDidLoad() {\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\n  }\n  async onPopState() {\n    const direction = this.historyDirection();\n    let segments = this.getPath();\n    const canProceed = await this.runGuards(segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        segments = parsePath(canProceed.redirect).segments;\n      }\n      else {\n        return false;\n      }\n    }\n    return this.writeNavStateRoot(segments, direction);\n  }\n  onBackButton(ev) {\n    ev.detail.register(0, processNextHandler => {\n      this.back();\n      processNextHandler();\n    });\n  }\n  /** @internal */\n  async canTransition() {\n    const canProceed = await this.runGuards();\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        return canProceed.redirect;\n      }\n      else {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Navigate to the specified URL.\n   *\n   * @param url The url to navigate to.\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\n   */\n  async push(url, direction = 'forward', animation) {\n    if (url.startsWith('.')) {\n      url = (new URL(url, window.location.href)).pathname;\n    }\n    let parsedPath = parsePath(url);\n    const canProceed = await this.runGuards(parsedPath.segments);\n    if (canProceed !== true) {\n      if (typeof canProceed === 'object') {\n        parsedPath = parsePath(canProceed.redirect);\n      }\n      else {\n        return false;\n      }\n    }\n    this.setPath(parsedPath.segments, direction, parsedPath.queryString);\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\n  }\n  /**\n   * Go back to previous page in the window.history.\n   */\n  back() {\n    window.history.back();\n    return Promise.resolve(this.waitPromise);\n  }\n  /** @internal */\n  async printDebug() {\n    printRoutes(readRoutes(this.el));\n    printRedirects(readRedirects(this.el));\n  }\n  /** @internal */\n  async navChanged(direction) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\n      return false;\n    }\n    const { ids, outlet } = await readNavState(window.document.body);\n    const routes = readRoutes(this.el);\n    const chain = routerIDsToChain(ids, routes);\n    if (!chain) {\n      console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\n      return false;\n    }\n    const path = chainToPath(chain);\n    if (!path) {\n      console.warn('[ion-router] router could not match path because some required param is missing');\n      return false;\n    }\n    this.setPath(path, direction);\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\n    return true;\n  }\n  // This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes.\n  onRedirectChanged() {\n    const path = this.getPath();\n    if (path && findRouteRedirect(path, readRedirects(this.el))) {\n      this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\n    }\n  }\n  // This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes.\n  onRoutesChanged() {\n    return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\n  }\n  historyDirection() {\n    var _a;\n    const win = window;\n    if (win.history.state === null) {\n      this.state++;\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\n    }\n    const state = win.history.state;\n    const lastState = this.lastState;\n    this.lastState = state;\n    if (state > lastState || (state >= lastState && lastState > 0)) {\n      return ROUTER_INTENT_FORWARD;\n    }\n    if (state < lastState) {\n      return ROUTER_INTENT_BACK;\n    }\n    return ROUTER_INTENT_NONE;\n  }\n  async writeNavStateRoot(path, direction, animation) {\n    if (!path) {\n      console.error('[ion-router] URL is not part of the routing set');\n      return false;\n    }\n    // lookup redirect rule\n    const redirects = readRedirects(this.el);\n    const redirect = findRouteRedirect(path, redirects);\n    let redirectFrom = null;\n    if (redirect) {\n      const { segments, queryString } = redirect.to;\n      this.setPath(segments, direction, queryString);\n      redirectFrom = redirect.from;\n      path = segments;\n    }\n    // lookup route chain\n    const routes = readRoutes(this.el);\n    const chain = routerPathToChain(path, routes);\n    if (!chain) {\n      console.error('[ion-router] the path does not match any route');\n      return false;\n    }\n    // write DOM give\n    return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\n  }\n  async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    const unlock = await this.lock();\n    let changed = false;\n    try {\n      changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\n    }\n    catch (e) {\n      console.error(e);\n    }\n    unlock();\n    return changed;\n  }\n  async lock() {\n    const p = this.waitPromise;\n    let resolve;\n    this.waitPromise = new Promise(r => resolve = r);\n    if (p !== undefined) {\n      await p;\n    }\n    return resolve;\n  }\n  // Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\n  //\n  // When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\n  // Otherwise the beforeEnterHook hook of the target route is executed.\n  async runGuards(to = this.getPath(), from) {\n    if (from === undefined) {\n      from = parsePath(this.previousPath).segments;\n    }\n    if (!to || !from) {\n      return true;\n    }\n    const routes = readRoutes(this.el);\n    const fromChain = routerPathToChain(from, routes);\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\n    if (canLeave === false || typeof canLeave === 'object') {\n      return canLeave;\n    }\n    const toChain = routerPathToChain(to, routes);\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\n    return beforeEnterHook ? beforeEnterHook() : true;\n  }\n  async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\n    if (this.busy) {\n      console.warn('[ion-router] router is busy, transition was cancelled');\n      return false;\n    }\n    this.busy = true;\n    // generate route event and emit will change\n    const routeEvent = this.routeChangeEvent(path, redirectFrom);\n    if (routeEvent) {\n      this.ionRouteWillChange.emit(routeEvent);\n    }\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\n    this.busy = false;\n    // emit did change\n    if (routeEvent) {\n      this.ionRouteDidChange.emit(routeEvent);\n    }\n    return changed;\n  }\n  setPath(path, direction, queryString) {\n    this.state++;\n    writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\n  }\n  getPath() {\n    return readPath(window.location, this.root, this.useHash);\n  }\n  routeChangeEvent(path, redirectFromPath) {\n    const from = this.previousPath;\n    const to = generatePath(path);\n    this.previousPath = to;\n    if (to === from) {\n      return null;\n    }\n    const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\n    return {\n      from,\n      redirectedFrom,\n      to,\n    };\n  }\n  get el() { return getElement(this); }\n};\n\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n\nlet RouterLink = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n    this.routerDirection = 'forward';\n    this.onClick = (ev) => {\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\n    };\n  }\n  render() {\n    const mode = getIonMode(this);\n    const attrs = {\n      href: this.href,\n      rel: this.rel,\n      target: this.target\n    };\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'ion-activatable': true\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\n  }\n};\nRouterLink.style = routerLinkCss;\n\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\n"],"names":["r","registerInstance","e","createEvent","i","getElement","h","H","Host","c","componentOnReady","o","debounce","b","getIonMode","openURL","createColorClasses","Route","hostRef","ionRouteDataChanged","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writePath","history","root","direction","state","parsePath","pushState","replaceState","chainToPath","chain","route","segment","param","params","slice","push","removePrefix","prefix","readPath","loc","pathname","hash","qsStart","indexOf","substr","split","map","trim","printRoutes","routes","console","group","forEach","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","toLowerCase","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","beforeEnter","beforeLeave","a","assign","routerIDsToChain","chains","match","maxMatches","plainIDs","score","routerPathToChain","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","runGuards","getPath","canProceed","setPath","writeNavStateRoot","onRoutesChanged","onRedirectChanged","bind","historyDirection","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","parsedPath","waitPromise","warn","safeWriteNavState","_a","win","title","redirectFrom","lock","unlock","p","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","mode","attrs","rel","target","class","color","style","ion_route","ion_route_redirect","ion_router","ion_router_link"],"sourceRoot":"webpack:///"}